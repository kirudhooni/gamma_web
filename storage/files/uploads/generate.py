#from tempfile import TemporaryFile
import numpy as np
import argparse
import csv

#data
Erythropic_data = [0,0,0.000407619000000000,0.00106921000000000,0.00254073000000000,0.00531546000000000,0.00998835000000000,0.0160130000000000,0.0233957000000000,0.0309104000000000,0.0397810000000000,0.0494172000000000,0.0594619000000000,0.0686538000000000,0.0795647000000000,0.0907704000000000,0.106663000000000,0.128336000000000,0.151651000000000,0.177116000000000,0.207940000000000,0.244046000000000,0.282752000000000,0.334786000000000,0.391705000000000,0.456252000000000,0.526538000000000,0.599867000000000,0.675313000000000,0.737108000000000,0.788900000000000,0.837403000000000,0.890871000000000,0.926660000000000,0.944527000000000,0.970703000000000,0.985636000000000,0.996979000000000,0.999543000000000,0.987057000000000,0.957841000000000,0.939781000000000,0.906693000000000,0.859605000000000,0.803173000000000,0.740680000000000,0.668991000000000,0.593248000000000,0.517449000000000,0.445125000000000,0.369168000000000,0.300316000000000,0.242316000000000,0.193730000000000,0.149509000000000,0.112638000000000,0.0838077000000000,0.0616384000000000,0.0448132000000000,0.0321660000000000,0.0227738000000000,0.0158939000000000,0.0109123000000000,0.00759453000000000,0.00528607000000000,0.00366675000000000,0.00251327000000000,0.00172108000000000,0.00118900000000000,0.000822396000000000,0.000572917000000000,0.000399670000000000,0.000278553000000000,0.000196528000000000,0.000138482000000000,9.81226000000000e-05,6.98827000000000e-05,4.98430000000000e-05,3.57781000000000e-05,2.56411000000000e-05,1.85766000000000e-05]
Chloropic_data = [0,0,0.000358227000000000,0.000964828000000000,0.00237208000000000,0.00512316000000000,0.00998841000000000,0.0172596000000000,0.0273163000000000,0.0396928000000000,0.0555384000000000,0.0750299000000000,0.0957612000000000,0.116220000000000,0.139493000000000,0.162006000000000,0.193202000000000,0.232275000000000,0.271441000000000,0.310372000000000,0.355066000000000,0.405688000000000,0.456137000000000,0.522970000000000,0.591003000000000,0.666404000000000,0.743612000000000,0.816808000000000,0.889214000000000,0.934977000000000,0.961962000000000,0.981481000000000,0.998931000000000,0.991383000000000,0.961876000000000,0.935829000000000,0.890949000000000,0.840969000000000,0.776526000000000,0.700013000000000,0.611728000000000,0.531825000000000,0.454142000000000,0.376527000000000,0.304378000000000,0.239837000000000,0.185104000000000,0.140431000000000,0.104573000000000,0.0765841000000000,0.0554990000000000,0.0397097000000000,0.0280314000000000,0.0194366000000000,0.0137660000000000,0.00954315000000000,0.00650455000000000,0.00442794000000000,0.00306050000000000,0.00211596000000000,0.00145798000000000,0.000998424000000000,0.000677653000000000,0.000467870000000000,0.000325278000000000,0.000225641000000000,0.000155286000000000,0.000107388000000000,7.49453000000000e-05,5.24748000000000e-05,3.70443000000000e-05,2.62088000000000e-05,1.85965000000000e-05,1.33965000000000e-05,9.63397000000000e-06,6.96522000000000e-06,5.06711000000000e-06,3.68617000000000e-06,2.69504000000000e-06,1.96864000000000e-06,1.45518000000000e-06]
Cyanopic_data = [0,0,0.00614265000000000,0.0159515000000000,0.0396308000000000,0.0897612000000000,0.178530000000000,0.305941000000000,0.462692000000000,0.609570000000000,0.756885000000000,0.869984000000000,0.966960000000000,0.993336000000000,0.991329000000000,0.906735000000000,0.823726000000000,0.737043000000000,0.610456000000000,0.470894000000000,0.350108000000000,0.258497000000000,0.185297000000000,0.135351000000000,0.0967990000000000,0.0649614000000000,0.0412337000000000,0.0271300000000000,0.0176298000000000,0.0113252000000000,0.00717089000000000,0.00454287000000000,0.00283352000000000,0.00175573000000000,0.00108230000000000,0.000664512000000000,0.000408931000000000,0.000251918000000000,0.000155688000000000,9.67045000000000e-05,6.04705000000000e-05,3.81202000000000e-05,2.42549000000000e-05,1.55924000000000e-05,1.01356000000000e-05,6.66657000000000e-06,4.43906000000000e-06,2.99354000000000e-06,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
Rhodopic_data = [0.000589000000000000,0.00110800000000000,0.00220900000000000,0.00453000000000000,0.00929000000000000,0.0185200000000000,0.0348400000000000,0.0604000000000000,0.0966000000000000,0.143600000000000,0.199800000000000,0.262500000000000,0.328100000000000,0.393100000000000,0.455000000000000,0.513000000000000,0.567000000000000,0.620000000000000,0.676000000000000,0.734000000000000,0.793000000000000,0.851000000000000,0.904000000000000,0.949000000000000,0.982000000000000,0.998000000000000,0.997000000000000,0.975000000000000,0.935000000000000,0.880000000000000,0.811000000000000,0.733000000000000,0.650000000000000,0.564000000000000,0.481000000000000,0.402000000000000,0.328800000000000,0.263900000000000,0.207600000000000,0.160200000000000,0.121200000000000,0.0899000000000000,0.0655000000000000,0.0469000000000000,0.0331500000000000,0.0231200000000000,0.0159300000000000,0.0108800000000000,0.00737000000000000,0.00497000000000000,0.00333500000000000,0.00223500000000000,0.00149700000000000,0.00100500000000000,0.000677000000000000,0.000459000000000000,0.000312900000000000,0.000214600000000000,0.000148000000000000,0.000102600000000000,7.15000000000000e-05,5.01000000000000e-05,3.53300000000000e-05,2.50100000000000e-05,1.78000000000000e-05,1.27300000000000e-05,9.14000000000000e-06,6.60000000000000e-06,4.78000000000000e-06,3.48200000000000e-06,2.54600000000000e-06,1.87000000000000e-06,1.37900000000000e-06,1.02200000000000e-06,7.60000000000000e-07,5.67000000000000e-07,4.25000000000000e-07,3.19600000000000e-07,2.41300000000000e-07,1.82900000000000e-07,1.39000000000000e-07]
Melanopic_data = [0.000918165000000000,0.00166724000000000,0.00309442000000000,0.00588035000000000,0.0114277000000000,0.0228112000000000,0.0461550000000000,0.0794766000000000,0.137237000000000,0.187096000000000,0.253865000000000,0.320679000000000,0.401587000000000,0.474002000000000,0.553715000000000,0.629654000000000,0.708049000000000,0.785216000000000,0.860291000000000,0.917734000000000,0.965605000000000,0.990621000000000,1,0.992022000000000,0.965952000000000,0.922299000000000,0.862888000000000,0.785233000000000,0.699628000000000,0.609422000000000,0.519309000000000,0.432533000000000,0.351707000000000,0.279135000000000,0.215722000000000,0.162056000000000,0.118526000000000,0.0843457000000000,0.0587013000000000,0.0400089000000000,0.0268747000000000,0.0178624000000000,0.0117901000000000,0.00773430000000000,0.00506686000000000,0.00331766000000000,0.00217698000000000,0.00143314000000000,0.000947313000000000,0.000627648000000000,0.000417955000000000,0.000279801000000000,0.000188341000000000,0.000127337000000000,8.65751000000000e-05,5.91914000000000e-05,4.06945000000000e-05,2.81320000000000e-05,1.95535000000000e-05,1.36480000000000e-05,9.57637000000000e-06,6.75425000000000e-06,4.78804000000000e-06,3.40841000000000e-06,2.43819000000000e-06,1.75252000000000e-06,1.26560000000000e-06,9.18078000000000e-07,6.68991000000000e-07,4.89531000000000e-07,3.59766000000000e-07,2.65493000000000e-07,1.96740000000000e-07,1.46370000000000e-07,1.09332000000000e-07,8.19587000000000e-08,6.16749000000000e-08,4.65916000000000e-08,3.53272000000000e-08,2.68803000000000e-08,2.05258000000000e-08]
Photopic_data = [ 3.90000000000000e-05, 6.40000000000000e-05, 0.000120000000000000, 0.000217000000000000, 0.000396000000000000, 0.000640000000000000, 0.00121000000000000, 0.00218000000000000, 0.00400000000000000, 0.00730000000000000, 0.0116000000000000, 0.0168400000000000, 0.0230000000000000, 0.0298000000000000, 0.0380000000000000, 0.0480000000000000, 0.0600000000000000, 0.0739000000000000, 0.0909800000000000, 0.112600000000000, 0.139020000000000, 0.169300000000000, 0.208020000000000, 0.258600000000000, 0.323000000000000, 0.407300000000000, 0.503000000000000, 0.608200000000000, 0.710000000000000, 0.793200000000000, 0.862000000000000, 0.914850000000000, 0.954000000000000, 0.980300000000000, 0.994950000000000, 1, 0.995000000000000, 0.978600000000000, 0.952000000000000, 0.915400000000000, 0.870000000000000, 0.816300000000000, 0.757000000000000, 0.694900000000000, 0.631000000000000, 0.566800000000000, 0.503000000000000, 0.441200000000000, 0.381000000000000, 0.321000000000000, 0.265000000000000, 0.217000000000000, 0.175000000000000, 0.138200000000000, 0.107000000000000, 0.0816000000000000, 0.0610000000000000, 0.0445800000000000, 0.0320000000000000, 0.0232000000000000, 0.0170000000000000, 0.0119200000000000, 0.00821000000000000, 0.00572300000000000, 0.00410200000000000, 0.00292900000000000, 0.00209100000000000, 0.00148400000000000, 0.00104700000000000, 0.000740000000000000, 0.000520000000000000, 0.000361000000000000, 0.000249000000000000, 0.000172000000000000, 0.000120000000000000, 8.50000000000000e-05, 6.00000000000000e-05, 4.20000000000000e-05, 3.00000000000000e-05, 2.10000000000000e-05, 1.50000000000000e-05 ]
x_five = [380,385,390,395,400,405,410,415,420,425,430,435,440,445,450,455,460,465,470,475,480,485,490,495,500,505,510,515,520,525,530,535,540,545,550,555,560,565,570,575,580,585,590,595,600,605,610,615,620,625,630,635,640,645,650,655,660,665,670,675,680,685,690,695,700,705,710,715,720,725,730,735,740,745,750,755,760,765,770,775,780]

parser = argparse.ArgumentParser()                                               
parser.add_argument('--file','-f', type=str, required=True)
args = parser.parse_args()
data = np.load('output.npz')
row_list =[]
count = 0

with open(args.file , newline='', encoding='utf-8') as f:	
    reader = csv.reader(f)
    for row in reader:
        if count != 0:
            spd = row[3:17]
            #print(data['xx'])
            #print(spd)
            #print(data['convMat'])
            spdFloat = list(map(float, spd))
            date = row[0]
            temperature = row[1]
            activity = row[2]
            # Interpolate 14 points to fit xx
            gamma_interp_raw = np.interp(data['xx'], data['gamma_w'], spdFloat)
            # Normalize raw to 1
            norm_gamma_interp_raw = gamma_interp_raw/np.max(gamma_interp_raw)
            # Apply conversion
            gammaRawSquared = np.square(norm_gamma_interp_raw)
            c = np.concatenate((np.concatenate((1, norm_gamma_interp_raw), axis=None), gammaRawSquared), axis=None)
            resMat = np.matrix(c)*np.matrix(data['convMat'])
            resMat[resMat < 0] = 0
            # Reconstruct
            reconstructedSpectrum = resMat
            reconstructedSpectrum = reconstructedSpectrum/np.max(reconstructedSpectrum)
            # Power adjustment
            K = 323 # Can replace with characterization function from Anas
            radio_power = np.sum(spdFloat)/K
            factor = radio_power/np.sum(reconstructedSpectrum)
            oriReconstructedSpectrum = reconstructedSpectrum.copy()
            reconstructedSpectrum = oriReconstructedSpectrum*factor
            A = np.squeeze(np.asarray(reconstructedSpectrum))

            spd5 = np.interp(x_five, data['xx'], A)
            p_lux = np.sum(Photopic_data @ spd5) * 683.0015 * 5
            m_lux = (np.sum(Melanopic_data @ spd5) * 1000 * 5)/1.3262
            er_lux = (np.sum(Erythropic_data @ spd5) * 1000 * 5)/1.6289
            ch_lux = (np.sum(Chloropic_data @ spd5) * 1000 * 5)/1.4558
            cy_lux = (np.sum(Cyanopic_data @ spd5) * 1000 * 5)/0.8173
            rh_lux = (np.sum(Rhodopic_data @ spd5) * 1000 * 5)/1.4497

            
            listRow = [date,temperature,activity,p_lux,m_lux,er_lux,ch_lux,cy_lux,rh_lux]
            for val in A:
                listRow.append(val)
            #print(reconstructedSpectrum)
            
            row_list.append(listRow)
        count += 1
    
		
#    data = list(reader)
	
#    dataSpd = data[1:]
#    count = 0
#for spd in dataSpd:
#    count +=1
#    spdFloat = list(map(float, spd))
#    spd5 = np.interp(xx, inputW, spdFloat)

#print(data['x'])
#print(data['y'])

#x = data['x']
#y = data['y']
#print(reader)

#resMat = np.matrix(y)*np.transpose(np.matrix(x))
#np.savetxt("resMat.csv", resMat, delimiter=",")
#print(resMat)
output_name = args.file.split('.')
output_name = output_name[0]+'_reconstructed.csv'

with open(output_name, 'w', newline='') as file:
    writer = csv.writer(file)
    writer.writerow(["Datetime", "Temperature", "Activity", "Photopic lux", "Melanopic lux", "L-cone", "M-cone","S-cone","Rhodopic lux", "SPD"])
    writer.writerows(row_list)
print("done")